一、生成秘钥
$ ssh-keygen -t rsa -C Jet_Oracle@outlook.com
生成目录：C:\Users\JETLi\.ssh\id_rsa.pub   将公钥复制到 GitHub官网上的 SSH and GPG keys 菜单中
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

二、创建版本库与GitHub上的远程库关联
1.在GitHub官网创建自己的远程仓库 python_file
2.创建本地目录 G:\whw_demo
3.将 G:\whw_demo 变成可管理的仓库，执行 git init
4.将需要上传的文件或文件夹拷贝到whw_demo这个目录里
5.执行 git add filename or dirname   添加到索引库中
6.执行 git commit -m "first commit"  提交索引库中的内容
7.将远程库与本地仓库关联:
  执行 git remote add origin git@github.com:jetli123/python_file.git
8.将本地库所有内容推送到远程库上:
  执行 git push -u origin master  上传本地仓库项目到GitHub官网中的库里
9.由于远程库是空的，我们第一次推送 master分支时，加上了 -u 参数，Git不但会把
  本地的master分支内容推送到远程新的 master分支，还会把本地的master分支和远程
  master分支关联起来，在以后推送或拉取时就可以简化命令。
10.从现在起，只要本地作了提交，就可以通过命令：
  git push origin master 把本地master 分支的最新修改推送至GitHub，现在你就拥有了  真正的分布式版本库！

三、GitHub上的远程库更新修改后，本地库做同步：
  执行 git pull


四、git 客户端从版本库中删除文件
1.$ touch 1.txt
2.$ git add 1.txt
3.$ git commit -m "add 1.txt"
4.$ rm 1.txt
5.$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    1.txt

no changes added to commit (use "git add" and/or "git commit -a")

6.$ git rm 1.txt
7.$ git commit -m "remove 1.txt"
8.$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

9.$ git push origin master
Username for 'https://github.com': jetli123
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 291 bytes | 291.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/jetli123/python_files.git
   0adc008..25f0f49  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

五、git 客户端删除文件并恢复
1.$ touch 1.txt
2.$ git add 1.txt
3.$ git commit -m "add 1.txt"
4.$ rm 1.txt
5.$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    1.txt

no changes added to commit (use "git add" and/or "git commit -a")
6.$ git checkout -- 1.txt  # 恢复最新版本
7 $ git push origin master # 同步版本库

六、先创建远程仓库，本地克隆远程库
1.GitHub 官网上 选择 new repository
2.勾选 Initialize this repository with a README
3.在本地进入一个目录
  执行 git clone git@github.com:jetli123/second_repository.git
  然后本地目录就有了一个 README.md 的文件
4.如果 使用 https://github.com/jetli123/second_repository.git 
  https 协议除了速度慢以外，最大麻烦每次推送都必须输入口令
