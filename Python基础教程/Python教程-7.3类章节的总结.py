# -*- coding: utf-8 -*-
""""""
# 关于面向对象设计的思考
# 1.将属于一类的对象放在一起。如果一个函数操作一个全局变量，那么两者最好都在类内作为特性和方法出现
# 2.不要让对象过于亲密。方法应该只关心自己实例的特性。让其他实例管理自己的状态。
# 3.要小心继承，尤其是多重继承。多重继承有时很有用，但是难以正确使用，更难以调试。
# 4.简单就好。让你的方法小巧。争取30秒内读完（以及理解），尽量将代码控制在一页或者一屏之内

"""当考虑需要什么类以及类要有什么方法时："""
# 1.写下问题的描述（程序需要做什么），把所有名词、动词和形容词加下划线。
# 2.对于所有名词，用作可能的类。
# 3.对于所有动词，用作可能的方法。
# 4.对于所有形容词，用作可能的特性。
# 5.把所有方法和特性分配到类

"""还可以考虑类和对象之间的关系（比如继承或协作），以及它们的作用："""
# 1.写下（或者想象一下）一系列的使用实例，也就是程序应用时的场景，试着包括所有的功能。
# 2.一步步考虑每个使用实例，保证模型包括所有需要的东西。如果有遗漏的话就添加进来。
#   如果某处不太正确则改正。继续，直到满意为止。
#